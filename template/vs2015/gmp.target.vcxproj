<?xml version="1.0" encoding="utf-8"?>

<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
##{
	for(i in gmp.nuget){
		var pack = gmp.nuget[i];
		var arr = pack.split(" ");
		var id = arr[0];
		var version = arr[1];
		var proppath = "$(SolutionDir)\\packages\\"+id+"."+version+"\\build\\native\\"+id+".props";
		var targetpath = "$(SolutionDir)\\packages\\"+id+"."+version+"\\build\\native\\"+id+".targets";
		
		out +=  `<Import Project="${proppath}" Condition="Exists('${proppath}')" />\n`;

	}
}##

  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
##{ 
for(i in gmp.depends){
	var depend = gmp.depends[i];
	var name = getTargetName(depend);
	var guid = util.guid(name);
    out += '    <ProjectReference Include="../'+ depend +'/vs2015/'+ name +'.vcxproj">\n';
	out += '      <Project>'+guid+'</Project>\n';
	out += '    </ProjectReference>\n';
} 
}##		
  </ItemGroup>
  <ItemGroup>  
##{ 
if(gmp.rcfile){
    out +=  "<ResourceCompile Include=\"../"+ gmp.rcfile +"\" />";
}
}##  
  </ItemGroup>  
  <ItemGroup>
##{ 
for(i in gmp.srcs){
	var file = gmp.srcs[i];
	var name = path.basename(file);
	if(name == "stdafx.cpp" || name == "pch.cpp"){
		out += '    <ClCompile Include=\"../' + gmp.srcs[i] + '\" >\n';
		out += '       <PrecompiledHeader >Create</PrecompiledHeader>\n';
      	out += '    </ClCompile>\n';
	}else{
		out += '    <ClCompile Include=\"../' + gmp.srcs[i] + '\" />\n';
	}
} 
}##
  </ItemGroup>
  <ItemGroup>
##{ 
for(i in gmp.headers){
    out += '    <ClInclude Include=\"../' + gmp.headers[i] + '\" />\n';
} 
}##
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>##{gmp.guid}##</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>##{gmp.target}##</RootNamespace>
	<WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
##{ 
if(gmp.type == "shared"){
  gmp.vstype = "DynamicLibrary";
}else if(gmp.type == "static"){
  gmp.vstype = "StaticLibrary";
}else{
  gmp.vstype = "Application";
}
gmp.unused = "";
}## 
  <PropertyGroup Condition="'$(Configuration)'=='Debug'" Label="Configuration">
    <ConfigurationType>##{gmp.vstype}##</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
	<PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  
  <PropertyGroup Condition="'$(Configuration)'=='Release'" Label="Configuration">
    <ConfigurationType>##{gmp.vstype}##</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
	<PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>  
 
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  
  <PropertyGroup >
    <LinkIncremental>false</LinkIncremental>   
    <IncludePath>##{
for(i in gmp.includes){
    out += "../" + gmp.includes[i] + ';';
}     
    }##$(VC_IncludePath);$(WindowsSDK_IncludePath);</IncludePath>    
  </PropertyGroup> 

  <PropertyGroup Condition="'$(Platform)'=='Win32'">
    <LibraryPath>##{
for(i in gmp.libdirs){
    out += "../" + gmp.libdirs[i] + ';';
}     
    }##;$(VC_LibraryPath_x86);$(WindowsSDK_LibraryPath_x86);$(NETFXKitsDir)Lib\um\x86</LibraryPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Platform)'=='x64'">
    <LibraryPath>##{
for(i in gmp.libdirs){
    out += "../" + gmp.libdirs[i] + ';';
}     
    }##;$(VC_LibraryPath_x64);$(WindowsSDK_LibraryPath_x64);$(NETFXKitsDir)Lib\um\x64</LibraryPath>
  </PropertyGroup>  
  <ItemDefinitionGroup Condition="'$(Configuration)'=='Debug'">
    <ClCompile>
##{	
	if(gmp.precompile){
		out += '      <PrecompiledHeader>Use</PrecompiledHeader>\n';
		out += '      <PrecompiledHeaderFile>'+gmp.precompile+'</PrecompiledHeaderFile>\n';
		out += '      <PrecompiledHeaderOutputFile>$(IntDir)\$(TargetName).pch</PrecompiledHeaderOutputFile>\n';
	
	}else{
		out += '      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n';
	}      
}##
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <PreprocessorDefinitions>##{
for(i in gmp.defines){
    out += gmp.defines[i] + ';';
}     
    }##WIN32;_DEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>      
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>##{
for(i in gmp.libs){
    out += gmp.libs[i] + ';';
}     
    }##kernel32.lib;user32.lib;gdi32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalManifestDependencies>type='win32' name='Microsoft.Windows.Common-Controls' version='6.0.0.0' processorArchitecture='*' publicKeyToken='6595b64144ccf1df' language='*'</AdditionalManifestDependencies>	
    </Link>
  </ItemDefinitionGroup> 
    
  <ItemDefinitionGroup Condition="'$(Configuration)'=='Release'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
##{	
	if(gmp.precompile){
		out += '      <PrecompiledHeader>Use</PrecompiledHeader>\n';
		out += '      <PrecompiledHeaderFile>'+gmp.precompile+'</PrecompiledHeaderFile>\n';
		out += '      <PrecompiledHeaderOutputFile>$(IntDir)\$(TargetName).pch</PrecompiledHeaderOutputFile>\n';
	
	}else{
		out += '      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n';
	}      
}##
	 
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>##{
for(i in gmp.defines){
    out += gmp.defines[i] + ';';
}     
    }##WIN32;NDEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>##{
for(i in gmp.libs){
    out += gmp.libs[i] + ';';
}     
    }##kernel32.lib;user32.lib;gdi32.lib;%(AdditionalDependencies)</AdditionalDependencies>
	  <AdditionalManifestDependencies>type='win32' name='Microsoft.Windows.Common-Controls' version='6.0.0.0' processorArchitecture='*' publicKeyToken='6595b64144ccf1df' language='*'</AdditionalManifestDependencies>	
    </Link>
  </ItemDefinitionGroup>  
    
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
##{
	for(i in gmp.nuget){
		var pack = gmp.nuget[i];
		var arr = pack.split(" ");
		var id = arr[0];
		var version = arr[1];
		var proppath = "$(SolutionDir)\\packages\\"+id+"."+version+"\\build\\native\\"+id+".props";
		var targetpath = "$(SolutionDir)\\packages\\"+id+"."+version+"\\build\\native\\"+id+".targets";		
		
		out +=  `    <Import Project="${targetpath}" Condition="Exists('${targetpath}')" />\n`;

	}
}##
  </ImportGroup>
  
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>please install nuget package: {0}, or import project your self</ErrorText>
    </PropertyGroup>
	
##{
	for(i in gmp.nuget){
		var pack = gmp.nuget[i];
		var arr = pack.split(" ");
		var id = arr[0];
		var version = arr[1];
		var proppath = "$(SolutionDir)\\packages\\"+id+"."+version+"\\build\\native\\"+id+".props";
		var targetpath = "$(SolutionDir)\\packages\\"+id+"."+version+"\\build\\native\\"+id+".targets";
		
		out +=  `    <Error Condition="!Exists('${targetpath}')" Text="$([System.String]::Format('$(ErrorText)', '${id}'))" />\n`;
    
	}
}##	
  </Target>  
</Project>